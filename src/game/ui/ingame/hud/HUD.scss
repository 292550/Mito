@import "../../../../variables";

.hud-top-left {
  position: absolute;
  top: 10px;
  left: 10px;
  text-align: left;
  background: rgba(255, 255, 255, 0.9);
  pointer-events: none;
  border-radius: 2px;
  border: 1px solid rgb(220, 220, 220);
}

.hud-top {
  position: absolute;
  top: 0;
  left: 50px;
  right: 50px;
  border-bottom-right-radius: 5px;
  border-bottom-left-radius: 5px;
  background: transparentize($color: $light-gray1, $amount: 0.1);
  z-index: 2;
  max-height: 80vh;
  overflow: auto;
}

.hex-title {
  position: absolute;
  top: 200px;
  left: 50%;
  transform: translate(-50%);
  font-size: 80px;
  font-weight: bold;
  color: white;
  animation: fadeInOut 5s 4s ease both;
  pointer-events: none;
  white-space: nowrap;

  @keyframes fadeInOut {
    from {
      opacity: 0;
      filter: blur(10px);
    }

    20% {
      opacity: 1;
      filter: blur(0);
    }

    80% {
      opacity: 1;
      filter: blur(0);
    }

    to {
      opacity: 0%;
      filter: blur(10px);
    }
  }
}

.hud-top-center {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  transition: transform 2s 2s;
  pointer-events: none;

  &.hidden {
    visibility: hidden;
    transform: translateX(-50%) translateY(-170%);
  }
}

.hud-below-center {
  position: absolute;
  bottom: 40%;
  left: 50%;
  transform: translateX(-50%);
  pointer-events: none;
}

.paused {
  position: absolute;
  bottom: 25%;
  left: 50%;
  transform: translateX(-50%);
  pointer-events: none;
  font-size: 40px;
  color: white;
}

.paused-popover {
  .tile-details {
    pointer-events: initial;
  }
}

.mouse-position {
  position: absolute;
  width: 0;
  height: 0;

  .click-to-inspect {
    color: white;
    pointer-events: none;
    transform: translate(-50%, calc(-100% - 10px));
    display: inline-block;
    position: absolute;
    white-space: nowrap;
  }
}

.invalid-action {
  animation: tempIn 1.2s both;
  color: white;
  @include text-outline();
  font-weight: bold;
  font-size: 2em;

  @keyframes tempIn {
    0% {
      opacity: 0.5;
      transform: scale(1.5);
    }

    10% {
      opacity: 1;
      transform: scale(1);
    }

    75% {
      opacity: 1;
    }

    100% {
      opacity: 0;
    }
  }
}

.hud-right {
  position: absolute;
  right: 10px;
  top: 50px;
  text-align: left;
  background: rgba(255, 255, 255, 0.9);
  border-radius: 2px;
  font-size: 12px;
}

.hud-right-of-time {
  position: absolute;
  top: 10px;
  left: calc(50% + 60px);
  margin-left: 5px;
}

.hud-germinate {
  position: absolute;
  background: rgba(255, 255, 255, 0.9);
  border-radius: 5px;
  bottom: 20%;
  left: 50%;
  transform: translateX(-50%);
  cursor: pointer;
  padding: 20px;
  animation: 0.2s popIn 5s ease-in-out both;

  @keyframes popIn {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }

  p {
    font-size: 1em;
    margin: 0 0 10px;
  }
}

.hud-bottom {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  flex-direction: column;
  opacity: 0.95;
  transition: transform 2s 2s;
  border-top-left-radius: 2px;
  border-top-right-radius: 2px;
  pointer-events: none;

  &.hidden {
    transform: translateX(-50%) translateY(170%);
  }
}

.hud-bottom-right {
  position: absolute;
  bottom: 0;
  right: 0;
  padding: 20px;
  display: flex;
  flex-direction: column;
  pointer-events: none;
  z-index: 1;
  transition: transform 2s 2s;
  transform: translateX(0);

  &.hidden {
    transform: translateX(100%);
  }

  .tile-details {
    margin-bottom: 20px;
    pointer-events: none;

    // still allow hovering over the individual tooltip items.
    .bp3-popover-target {
      pointer-events: initial;
    }
  }
}

.player-inventory-container {
  position: relative;

  .mito-inventory-maxed {
    position: absolute;
    left: 50%;
    bottom: 100%;
    transform: translate(-50%);
    // background: $light-gray5;
    background: hsl(111, 70%, 27%);
    font-weight: bold;
    padding: 5px;
    border-top-left-radius: 2px;
    border-top-right-radius: 2px;
    align-self: center;
    transition: all 0.2s;
    color: $white;
    opacity: 0;

    &.is-maxed {
      opacity: 1;
    }
  }
}

.player-inventory-bar {
  background: hsl(111, 70%, 27%);
  padding: 10px;
  border-radius: 2px;
}

.win-shine {
  // TODO turn this into a shader
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  pointer-events: none;
  z-index: 1;
  box-shadow: inset 0 0 20px 5px transparentize($color-mutation, 0.1);
}

.hud-left {
  position: absolute;
  top: 10px;
  left: 10px;
  color: white;
  display: flex;
  flex-direction: column;
  // 4s after seed germinates, show tutorial UI
  animation: 0.2s ease-in 4s both comeIn;

  @keyframes comeIn {
    0% {
      opacity: 0;
    }

    100% {
      opacity: 1;
    }
  }

  .instruction {
    margin: 10px 0;
    transition: all 0.2s;
    display: flex;
    align-items: center;
    position: relative;
    white-space: nowrap;
    height: 32px;
    width: 265px;
    padding: 0 5px;

    .background-fill {
      position: absolute;
      left: 0;
      top: 0;
      height: 100%;
      transition: width 0.2s;
      background-color: rgba(255, 255, 255, 0.5);
      pointer-events: none;
      z-index: -1;
    }

    .mito-hud-button {
      display: inline;
      margin: 0 4px;

      .mito-hud-button-hotkey {
        color: $black;
      }
    }

    .next {
      display: inline;
      cursor: pointer;
      margin-left: 5px;
    }

    &.active,
    &:hover {
      font-size: 2em;
    }
    &:not(.active):not(:hover) {
      opacity: 0.2;
    }

    &.first {
      // appears 4s, lasts 5s, meaning this should only animate at 9s
      animation: 0.2s ease 9s both fromCenterOfScreen;
      @keyframes fromCenterOfScreen {
        from {
          transform: translate(50vw, 15vh) translate(-50%, -50%);
        }

        to {
          transform: translate(0);
        }
      }
    }

    &:not(.first) {
      // coordinate to show up after first instruction goes to left.
      animation: 0.2s ease 9s backwards fadeFromTransparent;
      @keyframes fadeFromTransparent {
        from {
          opacity: 0;
        }

        to {
          opacity: 0.2;
        }
      }
    }

    &.done {
      opacity: 0.2;
      // skip fadeFromTransparent animation
      animation: none;
    }

    // @for $i from 2 through 10 {
    //   &:nth-child(#{$i}) {
    //     opacity: #{50% - $i * 10%};
    //   }
    // }
  }
}
